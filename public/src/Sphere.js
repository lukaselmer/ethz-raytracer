// Generated by CoffeeScript 1.6.3
var Sphere;

Sphere = (function() {
  function Sphere(center, radius, reflectionProperties) {
    this.center = center;
    this.radius = radius;
    this.reflectionProperties = reflectionProperties;
    this.radiusSquared = this.radius * this.radius;
  }

  Sphere.prototype.norm = function(intersectionPoint) {
    return intersectionPoint.subtract(this.center).toUnitVector();
  };

  Sphere.prototype.intersects = function(ray) {
    var c, c_minus_o, d, distSquared, o, rayDistanceClosestToCenter, shortestDistanceFromCenterToRaySquared, t, x;
    console.setRlog();
    o = ray.line.anchor;
    d = ray.line.direction;
    c = this.center;
    c_minus_o = c.subtract(o);
    distSquared = c_minus_o.dot(c_minus_o);
    rayDistanceClosestToCenter = c_minus_o.dot(d);
    if (rayDistanceClosestToCenter < 0) {
      return false;
    }
    shortestDistanceFromCenterToRaySquared = distSquared - (rayDistanceClosestToCenter * rayDistanceClosestToCenter);
    if (shortestDistanceFromCenterToRaySquared > this.radiusSquared) {
      return false;
    }
    x = this.radiusSquared - shortestDistanceFromCenterToRaySquared;
    if (x < 0) {
      return false;
    }
    t = rayDistanceClosestToCenter - Math.sqrt(x);
    return t;
  };

  return Sphere;

})();
