// Generated by CoffeeScript 1.6.3
var SceneLoader;

SceneLoader = (function() {
  function SceneLoader() {
    this.scene = this.loadDefaults();
  }

  SceneLoader.prototype.loadDefaults = function() {
    var camera, fieldOfView, scene;
    fieldOfView = 40 / 180 * Math.PI;
    camera = new Camera($V([0, 0, 10]), $V([0, 0, -1]), $V([0, 1, 0]), 1, fieldOfView, RayConfig.width, RayConfig.height);
    scene = new Scene(camera, 0.2);
    scene.addLight(new Light($V([10, 10, 10]), new Color(1, 1, 1), new LightIntensity(0, 1, 1)));
    return scene;
  };

  SceneLoader.prototype.loadScene = function() {
    var scene;
    scene = this.scene;
    if (ModuleId.ALT) {
      this.loadAlternative(scene);
    } else if (ModuleId.B3) {
      this.loadB3(scene);
    } else if (ModuleId.B4) {
      this.loadB4(scene);
    } else {
      this.loadOriginal(scene);
    }
    return scene;
  };

  /* new ReflectionProperty(ambientColor, diffuseColor, specularColor, specularExponent, refractionIndex*/


  SceneLoader.prototype.loadOriginal = function(scene) {
    scene.addObject(new Sphere($V([0, 0, 0]), 2, new ReflectionProperty(new Color(0.75, 0, 0), new Color(1, 0, 0), new Color(1, 1, 1), 32, Infinity)));
    return scene.addObject(new Sphere($V([1.25, 1.25, 3]), 0.5, new ReflectionProperty(new Color(0, 0, 0.75), new Color(0, 0, 1), new Color(0.5, 0.5, 1), 16, 1.5)));
  };

  SceneLoader.prototype.loadB3 = function(scene) {
    scene.addObject(new Cylinder($V([0, 0, 0]), false, true, false, 2, 0, 1, new ReflectionProperty(new Color(0.75, 0, 0), new Color(1, 0, 0), new Color(1, 1, 1), 32, Infinity)));
    scene.addObject(new Ellipsoid($V([1.25, 1.25, 3]), 0.25, 0.75, 0.5, new ReflectionProperty(new Color(0, 0, 0.75), new Color(0, 0, 1), new Color(0.5, 0.5, 1), 16.0, 1.5)));
    scene.addObject(new Sphere($V([2.25, 1.25, 3]), 0.5, new ReflectionProperty(new Color(0, 0, 0.75), new Color(0, 0, 1), new Color(0.5, 0.5, 1), 16, 1.5)));
    scene.addObject(new Sphere($V([-1.25, -1.25, 3]), 0.5, new ReflectionProperty(new Color(0, 0, 0.75), new Color(0, 0, 1), new Color(0.5, 0.5, 1), 16, 1.5)));
    return scene.addObject(new Sphere($V([0, 0, 3]), 0.5, new ReflectionProperty(new Color(1, 0, 0.75), new Color(0, 0, 1), new Color(0.5, 0.5, 1), 16, 1.5)));
  };

  SceneLoader.prototype.loadB4 = function(scene) {};

  SceneLoader.prototype.loadAlternative = function(scene) {
    var c;
    c = Color.random();
    scene.addObject(new Sphere($V([0, 0, 0]), 2, new ReflectionProperty(c, c, new Color(1, 1, 1), 32, 1.5)));
    c = Color.random();
    scene.addObject(new Sphere($V([1.25, 1.25, 3]), 0.5, new ReflectionProperty(c, c, new Color(0.5, 0.5, 1), 16, 1.5)));
    c = Color.random();
    scene.addObject(new Sphere($V([1.25, -1.25, 3]), 0.5, new ReflectionProperty(c, c, new Color(0.5, 0.5, 1), 16, 1.5)));
    c = Color.random();
    scene.addObject(new Sphere($V([0, -.75, 3]), 0.5, new ReflectionProperty(c, c, new Color(0.5, 0.5, 1), 16, 1.5)));
    return scene.addObject(new Sphere($V([2.5, 0, -1]), 0.5, new ReflectionProperty(new Color(0, 0, 0.75), new Color(0, 0, 1), new Color(0.5, 0.5, 1), 16, 1.5)));
  };

  return SceneLoader;

})();

this.SceneLoader = SceneLoader;

this.trace = function(scene, color, pixelX, pixelY) {
  var rayTracer;
  rayTracer = new RayTracer(color, pixelX, pixelY, scene);
  return rayTracer.trace();
};
