// Generated by CoffeeScript 1.6.3
(function() {
  var Camera, Color, Intensity, Light, Scene, Sphere;

  Color = (function() {
    function Color(r, g, b) {
      this.r = r;
      this.g = g;
      this.b = b;
    }

    Color.prototype.toArray = function() {
      return [this.r, this.g, this.b];
    };

    return Color;

  })();

  Scene = (function() {
    function Scene(camera, light) {
      this.camera = camera;
      this.light = light;
    }

    return Scene;

  })();

  Camera = (function() {
    function Camera(position, direction, upDirection, fieldOfView) {
      this.position = position;
      this.direction = direction;
      this.upDirection = upDirection;
      this.fieldOfView = fieldOfView;
    }

    return Camera;

  })();

  Light = (function() {
    function Light(color, location, intensity) {
      this.color = color;
      this.location = location;
      this.intensity = intensity;
    }

    return Light;

  })();

  Intensity = (function() {
    function Intensity(ambient, diffuse, specular, globalAmbient) {
      this.ambient = ambient;
      this.diffuse = diffuse;
      this.specular = specular;
      this.globalAmbient = globalAmbient;
    }

    return Intensity;

  })();

  Sphere = (function() {
    function Sphere(center, radius) {
      this.center = center;
      this.radius = radius;
    }

    return Sphere;

  })();

  this.loadScene = function() {
    var camera, light;
    camera = new Camera([0, 0, 10], [0, 0, -1], [0, 1, 0], 40);
    light = new Light(new Color(1, 1, 1), [10, 10, 10], new Intensity(0, 1, 1, 0.2));
    return this.scene = new Scene();
  };

  this.trace = function(color, pixelX, pixelY) {
    var c;
    c = new Color(pixelX / width, pixelY / height * 0.9, pixelX * pixelY / (width * height / 2));
    return color.setElements(c.toArray());
  };

}).call(this);

/*
//@ sourceMappingURL=raytracer.map
*/
