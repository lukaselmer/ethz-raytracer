// Generated by CoffeeScript 1.6.3
var Hemisphere;

Hemisphere = (function() {
  function Hemisphere(sphere, plane) {
    this.sphere = sphere;
    this.plane = plane;
  }

  Hemisphere.prototype.norm = function(intersectionPoint, ray) {
    var pi, pi1, pi2, si, si1, si2, _ref, _ref1;
    si = this.sphere.solutions(ray);
    pi = this.plane.solutions(ray);
    if (!(si && pi)) {
      return null;
    }
    si1 = si[0], si2 = si[1];
    if (si1 > si2) {
      _ref = [si2, si1], si1 = _ref[0], si2 = _ref[1];
    }
    pi1 = pi[0], pi2 = pi[1];
    if (pi1 > pi2) {
      _ref1 = [pi2, pi1], pi1 = _ref1[0], pi2 = _ref1[1];
    }
    if (si1 < pi1 && si2 < pi1) {
      return null;
    }
    if (si1 > pi1 && si2 > pi1) {
      this.reflectionProperties = this.sphere.reflectionProperties;
      return this.sphere.norm(intersectionPoint, ray);
    }
    if (si1 < pi1 && si2 > pi1) {
      this.reflectionProperties = this.plane.reflectionProperties;
      return this.plane.norm(intersectionPoint, ray);
    }
    throw "Invalid state";
  };

  Hemisphere.prototype.solutions = function(ray) {
    var pi, pi1, pi2, si, si1, si2, _ref, _ref1;
    si = this.sphere.solutions(ray);
    pi = this.plane.solutions(ray);
    if (!(si && pi)) {
      return null;
    }
    si1 = si[0], si2 = si[1];
    if (si1 > si2) {
      _ref = [si2, si1], si1 = _ref[0], si2 = _ref[1];
    }
    pi1 = pi[0], pi2 = pi[1];
    if (pi1 > pi2) {
      _ref1 = [pi2, pi1], pi1 = _ref1[0], pi2 = _ref1[1];
    }
    if (si1 < pi1 && si2 < pi1) {
      return null;
    }
    if (si1 > pi1 && si2 > pi1) {
      this.reflectionProperties = this.sphere.reflectionProperties;
      return si;
    }
    if (si1 < pi1 && si2 > pi1) {
      this.reflectionProperties = this.plane.reflectionProperties;
      return pi;
    }
    throw "Invalid state";
  };

  return Hemisphere;

})();
